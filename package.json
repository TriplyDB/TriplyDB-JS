{
  "name": "@triply/triplydb",
  "version": "6.0.9",
  "author": "Triply <info@triply.cc>",
  "license": "MIT",
  "repository": "github:TriplyDB/TriplyDB-JS",
  "bin": "./lib/bin/triplydb.js",
  "scripts": {
    "build": "rm -rf ./lib  && tsc -p tsconfig-build.json && chmod +x ./lib/bin/*",
    "build:watch": "rm -rf ./lib && tsc -p tsconfig-build.json --watch --preserveWatchOutput",
    "dev": "rm -rf ./lib && tsc -p tsconfig-build.json --watch --preserveWatchOutput",
    "test": "bash -c \"mocha $(find ./lib -name '*-test.js' | xargs) --timeout 120000 --require source-map-support/register\"",
    "package": "rollup -c && pkg ./lib/triplydb.cjs",
    "preversion": "isCleanBranch",
    "postversion": "versionToBranch",
    "prepublishOnly": "if [ -z \"${CI}\" ]; then echo Publishing is not allowed. Only the CI may publish; exit 1; fi",
    "util:lint": "ESLINT_STRICT=true ESLINT_EXPENSIVE=true eslint --ext .tsx --ext .ts ./src",
    "util:lint:precommit": "ESLINT_STRICT=true eslint",
    "util:prettify": "prettier --parser typescript --write $(find ./src -regex '.*\\.tsx?$')",
    "util:validateTs": "tsc -p ./tsconfig-validate.json --noEmit",
    "util:validateTs:withLib": "tsc -p ./tsconfig-validate.json --noEmit --skipLibCheck false",
    "util:validateTs:watch": "tsc -p ./tsconfig-validate.json --noEmit --watch --preserveWatchOutput",
    "util:validateFull": "yarn run util:validateTs && yarn run util:lint && yarn run build && yarn run test",
    "postinstall": "husky install ./bin/hooks",
    "prepack": "pinst --disable",
    "postpack": "pinst --enable"
  },
  "lint-staged": {
    "*.ts?(x)": [
      "prettier --parser typescript --write",
      "yarn run util:lint:precommit"
    ],
    "*.js": [
      "prettier --write"
    ],
    "*.md": [
      "prettier --write"
    ],
    "*.yml": [
      "prettier --write"
    ],
    "package-lock.json": [
      "sed -i 's|resolved\": \"http://|resolved\": \"https://|g' package-lock.json"
    ]
  },
  "dependencies": {
    "@triply/tus-js-client": "2.3.0",
    "@triply/utils": "^2.0.4",
    "colors": "^1.4.0",
    "cross-fetch": "^3.1.5",
    "debug": "^4.3.4",
    "form-data": "^4.0.0",
    "fs-extra": "^10.1.0",
    "global-agent": "^3.0.0",
    "http-status-codes": "^2.2.0",
    "jwt-decode": "^3.1.2",
    "lodash-es": "^4.17.21",
    "md5": "^2.3.0",
    "parse-link-header": "^2.0.0",
    "pumpify": "^2.0.1",
    "query-string": "^7.1.1",
    "semver": "^7.5.0",
    "sparqljs": "^3.6.2",
    "ts-essentials": "^9.3.1"
  },
  "devDependencies": {
    "@rollup/plugin-commonjs": "^24.1.0",
    "@rollup/plugin-json": "^6.0.0",
    "@rollup/plugin-node-resolve": "^15.0.2",
    "@rollup/plugin-sucrase": "^5.0.1",
    "@rollup/plugin-typescript": "^11.1.0",
    "@types/chai": "^4.3.1",
    "@types/chai-as-promised": "^7.1.5",
    "@types/debug": "^4.1.7",
    "@types/fs-extra": "^9.0.13",
    "@types/global-agent": "^2.1.1",
    "@types/lodash-es": "^4.17.7",
    "@types/md5": "^2.3.2",
    "@types/mocha": "^9.1.1",
    "@types/n3": "^1.10.4",
    "@types/node": "16",
    "@types/parse-link-header": "^2.0.1",
    "@types/pumpify": "^1.4.1",
    "@types/semver": "^7.3.10",
    "@types/sparqljs": "^3.1.3",
    "@typescript-eslint/eslint-plugin": "^5.30.6",
    "@typescript-eslint/parser": "^5.30.6",
    "chai": "^4.3.7",
    "chai-as-promised": "^7.1.1",
    "commander": "^9.5.0",
    "dotenv": "^16.3.1",
    "eslint": "^8.38.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-plugin-jest": "^27.2.1",
    "eslint-plugin-lodash": "^7.4.0",
    "husky": "8.0.3",
    "lint-staged": "^13.2.1",
    "mocha": "^10.0.0",
    "pinst": "^3.0.0",
    "pkg": "^5.8.1",
    "prettier": "^2.8.7",
    "rollup": "^3.20.5",
    "source-map-support": "^0.5.21",
    "typescript": "^5.0.4"
  },
  "packageManager": "yarn@3.2.1",
  "publishConfig": {
    "access": "public"
  },
  "exports": {
    ".": {
      "import": {
        "types": "./lib/App.d.ts",
        "default": "./lib/App.js"
      }
    },
    "./*": {
      "import": {
        "default": "./lib/*"
      }
    }
  },
  "type": "module"
}
